import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./EditProfile.css";

const EditProfile = () => {
  const navigate = useNavigate();
  const [profilePic, setProfilePic] = useState(null);
  const [bio, setBio] = useState("19%ü´Ä:)üëª");
  const [name, setName] = useState(""); // ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠
  const [updatedProfilePic, setUpdatedProfilePic] = useState(null); // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
  const [updatedName, setUpdatedName] = useState(""); // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà

  // ‡πÉ‡∏ä‡πâ useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  useEffect(() => {
    const savedProfilePic = localStorage.getItem("profilePic");
    const savedName = localStorage.getItem("profileName");
    if (savedProfilePic) setProfilePic(savedProfilePic);
    if (savedName) setName(savedName);
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  const handleProfilePicChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => setUpdatedProfilePic(reader.result);
      reader.readAsDataURL(file);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  const handleConfirmChanges = () => {
    const newProfilePic = updatedProfilePic || profilePic;
    // ‡∏ñ‡πâ‡∏≤ updatedName ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ name ‡πÄ‡∏î‡∏¥‡∏°
    const newName = updatedName.trim() !== "" ? updatedName : name;

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage
    localStorage.setItem("profilePic", newProfilePic);
    localStorage.setItem("profileName", newName);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    setProfilePic(newProfilePic);
    setName(newName);
    setUpdatedName(newName);  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï updatedName ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö newName
    navigate("/profile"); // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  };

  const handleBackToProfile = () => navigate("/profile");

  return (
    <div className="profile-edit">
      <h1>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</h1>
      <div className="profile-pic-container">
        <img
          className="profile-pic"
          src={updatedProfilePic || profilePic || "default-profile.jpg"}
          alt="Profile"
        />
        <label htmlFor="profile-pic-input" className="change-photo-btn">
          ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        </label>
        <input
          id="profile-pic-input"
          type="file"
          accept="image/*"
          onChange={handleProfilePicChange}
          style={{ display: "none" }}
        />
      </div>
      <div className="profile-info">
        <div className="input-group">
          <label>‡∏ä‡∏∑‡πà‡∏≠</label>
          <input
            type="text"
            value={updatedName} // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
            onChange={(e) => setUpdatedName(e.target.value)} // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô state
            placeholder="‡∏ä‡∏∑‡πà‡∏≠"
          />
        </div>
        <div className="input-group">
          <label>‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á</label>
          <input
            type="text"
            value={bio}
            onChange={(e) => setBio(e.target.value)}
            maxLength="150"
            placeholder="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á"
          />
        </div>
      </div>

      <button onClick={handleConfirmChanges} className="confirm-btn">
        ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
      </button>
{/* 
      <button onClick={handleBackToProfile} className="back-btn">
        ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
      </button> */}
    </div>
  );
};

export default EditProfile;






